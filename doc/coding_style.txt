Here are some policy descision:
===============================
- until a templating system is ready we are using straight lilypond files.
- until a configuration database is ready we are using lilypond includes to share data
	and to make it easy to change.
- all includes are root relative.
	( \include "src/include/common.lyi" )
- some more checks are being made by the "make check_all" procedue which are also parts
	of the policy.

name of files:
==============
If a song is called "Autumn Leaves" it will be in a file called "autumn_leaves.gpp".
This alteration has the following advantages:
	- it is deterministic and could be implemented using a three line function in
	almost any programming language.
	- it prevents all problems with case sensitive vs case insensitive file systems
	(this really means brain dead Microsoft systems).
	- it prevents shell scripting problems because it lacks spaces. Obviously one
	can circumvent these types of problems using correct escaping or quoting in
	coding such scripts but I don't see a reason to complicate things when a much
	simpler solution exists.

Policies about songs:
=====================
- breaks.
	Let lilypond dictate the break. Only change when lilypond makes bad descisions.
	use the \myBreak macro at every line end. This may turn to a break or it may not.
- bars
	- Don't do any extra special bars (\bar "||" or the like). It just overloads the music.
	Mark stuff with \mark "A", \mark "B" etc for parts but that's it.
	- At the end of the piece put an ending mark (\bar "|."). My convention is to have this mark at the end of the chords and not the tune. It seems that lilypond does
	not do that by default. (Why? Is that a bug that I should report ?!?).
- order between parts:
	first chords.
	then melody.
	at the end vocals.

Chords:
=======
- start chords with \startChords and end them with \endChords
- don't end with a turn around.
	REASONS FOR:
		- sounds bad (in midi for instance).
		- musicians know how to do turn arounds.
		- an example of a turn around is usually available. This is especially
		true for an AABA song where at least one turn around is always there (between
		the first and the second A parts).
	REASONS AGAINST:
		- maybe some people don't know how to turn around.
		- sometime the turn around is not trivial.
		- sometime the turn around is not anywhere in the song.
		- sometime both the previous two reasons persist.
- marking of parts ("A", "B") should be with the chords.
	rationale: less clutter and the chords define the structure more than the melody.
- marking the start of parts, end of parts, start of song, end of song should be with the chords.
- use "d:m7" and not "d:min7" (shorter).
- do NOT use repears ( | r1 | ) in chords. If you don't want the chords to repeat there
is a better way to do it.

Tune:
=====
- should be written using the \relative directive (reduces clutter and simplifies).
	reasons:

Lyrics:
=======
- quotations in lyrics
	you cannot put the quotes in double quotation marks (") since that will cause the
	lyrics to come out wrong, instead I used single quotation marks (').
- Lyrics and midi
	- I did not render the lyrics for midi. It seems that could be beneficial for Karaoke or various other uses. In any case I have yet to see this work right since timidity does not render it well (could be a problem with timidity or maybe a problem with lilyponds rendering of the lyrics for midi...).

Completeness:
=============
0 - unknown
1 - infrastructure (compilation) is ok. Uses my conventions.
2 - basic info is there. Could look bad.
3 - at least one component of tune/lyrics/harmony is ok.
4 - at least two components of tune/lyrics/harmony are ok.
5 - all three components of tune/lyrics/harmony are ok.

This information may also be needed to be introduced to MySQL using an enum.
